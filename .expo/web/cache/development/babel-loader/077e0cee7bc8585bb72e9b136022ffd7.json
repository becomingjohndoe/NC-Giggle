{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { initializeApp } from \"firebase/app\";\nimport { getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, sendPasswordResetEmail, onAuthStateChanged, GoogleAuthProvider, signInWithRedirect, getRedirectResult } from \"firebase/auth\";\nimport { doc, setDoc, getFirestore, collection, addDoc } from \"firebase/firestore\";\nvar firebaseConfig = {\n  apiKey: \"AIzaSyDwuwcfV_yiEVliu-hwBDHSU9zvrzf0S88\",\n  authDomain: \"test-authentication-with-react.firebaseapp.com\",\n  projectId: \"test-authentication-with-react\",\n  storageBucket: \"test-authentication-with-react.appspot.com\",\n  messagingSenderId: \"509266572396\",\n  appId: \"1:509266572396:web:18a0816e4fc471a6c85449\"\n};\nvar app = initializeApp(firebaseConfig);\nvar auth = getAuth();\nvar provider = new GoogleAuthProvider();\nvar db = getFirestore();\nexport var createUser = function createUser(email, password) {\n  return _regeneratorRuntime.async(function createUser$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          createUserWithEmailAndPassword(auth, email, password).then(function (userCredential) {\n            try {\n              addDoc(collection(db, \"users\"), {\n                email: userCredential.user.email,\n                uid: userCredential.user.uid\n              });\n            } catch (err) {\n              console.log(err);\n            }\n          }).catch(function (error) {\n            console.log(error);\n          });\n\n        case 1:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var signInWithGoogle = function signInWithGoogle() {\n  return _regeneratorRuntime.async(function signInWithGoogle$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          signInWithRedirect(auth, provider);\n\n        case 1:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var signOutUser = function signOutUser() {\n  return _regeneratorRuntime.async(function signOutUser$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          signOut(auth);\n\n        case 1:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nonAuthStateChanged(auth, function (user) {\n  try {\n    if (user) {\n      var userData = {\n        email: user.email,\n        uid: user.uid,\n        profile_picture: user.photoURL,\n        displayName: user.displayName,\n        age: 0,\n        city: \"\",\n        bio: \"\",\n        rating: 0,\n        awards: []\n      };\n      setDoc(doc(db, \"users\", user.uid), userData);\n    }\n  } catch (error) {\n    console.log(error);\n  }\n});\nexport default app;","map":{"version":3,"sources":["/Users/admin/northcoders/projects/NC-Giggle/firebase.js"],"names":["initializeApp","getAuth","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","sendPasswordResetEmail","onAuthStateChanged","GoogleAuthProvider","signInWithRedirect","getRedirectResult","doc","setDoc","getFirestore","collection","addDoc","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","app","auth","provider","db","createUser","email","password","then","userCredential","user","uid","err","console","log","catch","error","signInWithGoogle","signOutUser","userData","profile_picture","photoURL","displayName","age","city","bio","rating","awards"],"mappings":"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","sourcesContent":["// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport {\n\tgetAuth,\n\tcreateUserWithEmailAndPassword,\n\tsignInWithEmailAndPassword,\n\tsignOut,\n\tsendPasswordResetEmail,\n\tonAuthStateChanged,\n\tGoogleAuthProvider,\n\tsignInWithRedirect,\n\tgetRedirectResult,\n} from \"firebase/auth\";\nimport {\n\tdoc,\n\tsetDoc,\n\tgetFirestore,\n\tcollection,\n\taddDoc,\n} from \"firebase/firestore\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n\tapiKey: \"AIzaSyDwuwcfV_yiEVliu-hwBDHSU9zvrzf0S88\",\n\tauthDomain: \"test-authentication-with-react.firebaseapp.com\",\n\tprojectId: \"test-authentication-with-react\",\n\tstorageBucket: \"test-authentication-with-react.appspot.com\",\n\tmessagingSenderId: \"509266572396\",\n\tappId: \"1:509266572396:web:18a0816e4fc471a6c85449\",\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst auth = getAuth();\nconst provider = new GoogleAuthProvider();\nconst db = getFirestore();\n\nexport const createUser = async (email, password) => {\n\tcreateUserWithEmailAndPassword(auth, email, password)\n\t\t.then((userCredential) => {\n\t\t\ttry {\n\t\t\t\taddDoc(collection(db, \"users\"), {\n\t\t\t\t\temail: userCredential.user.email,\n\t\t\t\t\tuid: userCredential.user.uid,\n\t\t\t\t});\n\t\t\t} catch (err) {\n\t\t\t\tconsole.log(err);\n\t\t\t}\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.log(error);\n\t\t});\n};\n\nexport const signInWithGoogle = async () => {\n\tsignInWithRedirect(auth, provider);\n};\n\nexport const signOutUser = async () => {\n\tsignOut(auth);\n};\n\n// use this when you need user information on a certain page/component\n// gets called when user is signed in\n// use getAuth to get auth object\nonAuthStateChanged(auth, (user) => {\n\ttry {\n\t\tif (user) {\n\t\t\tconst userData = {\n\t\t\t\temail: user.email,\n\t\t\t\tuid: user.uid,\n\t\t\t\tprofile_picture: user.photoURL,\n\t\t\t\tdisplayName: user.displayName,\n\t\t\t\tage: 0,\n\t\t\t\tcity: \"\",\n\t\t\t\tbio: \"\",\n\t\t\t\trating: 0,\n\t\t\t\tawards: [],\n\t\t\t};\n\t\t\tsetDoc(doc(db, \"users\", user.uid), userData);\n\t\t}\n\t} catch (error) {\n\t\tconsole.log(error);\n\t}\n});\n\nexport default app;\n"]},"metadata":{},"sourceType":"module"}